From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: niklasnieberler <nikigalaxylp@gmail.com>
Date: Thu, 22 Aug 2024 14:42:40 +0200
Subject: [PATCH] dispatch TicksPerSecondCommand to spark tps


diff --git a/src/main/java/org/spigotmc/TicksPerSecondCommand.java b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
index 9eb2823cc8f83bad2626fc77578b0162d9ed5782..671f3d40fd134ceaaf6e5d8dda157de1ab3c2500 100644
--- a/src/main/java/org/spigotmc/TicksPerSecondCommand.java
+++ b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
@@ -1,6 +1,7 @@
 package org.spigotmc;
 
 import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit; // forktest
 import org.bukkit.ChatColor;
 import org.bukkit.command.Command;
 import org.bukkit.command.CommandSender;
@@ -15,12 +16,6 @@ public class TicksPerSecondCommand extends Command
         this.usageMessage = "/tps";
         this.setPermission( "bukkit.command.tps" );
     }
-    // Paper start
-    private static final net.kyori.adventure.text.Component WARN_MSG = net.kyori.adventure.text.Component.text()
-        .append(net.kyori.adventure.text.Component.text("Warning: ", net.kyori.adventure.text.format.NamedTextColor.RED))
-        .append(net.kyori.adventure.text.Component.text("Memory usage on modern garbage collectors is not a stable value and it is perfectly normal to see it reach max. Please do not pay it much attention.", net.kyori.adventure.text.format.NamedTextColor.GOLD))
-        .build();
-    // Paper end
 
     @Override
     public boolean execute(CommandSender sender, String currentAlias, String[] args)
@@ -30,29 +25,9 @@ public class TicksPerSecondCommand extends Command
             return true;
         }
 
-        // Paper start - Further improve tick handling
-        double[] tps = org.bukkit.Bukkit.getTPS();
-        net.kyori.adventure.text.Component[] tpsAvg = new net.kyori.adventure.text.Component[tps.length];
-
-        for ( int i = 0; i < tps.length; i++) {
-            tpsAvg[i] = TicksPerSecondCommand.format( tps[i] );
-        }
-
-        net.kyori.adventure.text.TextComponent.Builder builder = net.kyori.adventure.text.Component.text();
-        builder.append(net.kyori.adventure.text.Component.text("TPS from last 1m, 5m, 15m: ", net.kyori.adventure.text.format.NamedTextColor.GOLD));
-        builder.append(net.kyori.adventure.text.Component.join(net.kyori.adventure.text.JoinConfiguration.commas(true), tpsAvg));
-        sender.sendMessage(builder.asComponent());
-        if (args.length > 0 && args[0].equals("mem") && sender.hasPermission("bukkit.command.tpsmemory")) {
-            sender.sendMessage(net.kyori.adventure.text.Component.text()
-                .append(net.kyori.adventure.text.Component.text("Current Memory Usage: ", net.kyori.adventure.text.format.NamedTextColor.GOLD))
-                .append(net.kyori.adventure.text.Component.text(((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / (1024 * 1024)) + "/" + (Runtime.getRuntime().totalMemory() / (1024 * 1024)) + " mb (Max: " + (Runtime.getRuntime().maxMemory() / (1024 * 1024)) + " mb)", net.kyori.adventure.text.format.NamedTextColor.GREEN))
-            );
-            if (!this.hasShownMemoryWarning) {
-                sender.sendMessage(WARN_MSG);
-                this.hasShownMemoryWarning = true;
-            }
-        }
-        // Paper end
+        // forktest start
+        Bukkit.dispatchCommand(sender, "spark tps");
+        // forktest end
 
         return true;
     }
